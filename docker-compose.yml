version: '3.9'
volumes:
  kong_data: {}
  kong_prefix_vol:
    driver_opts:
     type: tmpfs
     device: tmpfs
  kong_tmp_vol:
    driver_opts:
     type: tmpfs
     device: tmpfs
networks:
  kong-net:
    external: false
services:
  xray:
    build:
      dockerfile: /home/daniel/Development/JavaProjects/xray-server/Dockerfile
      context: /home/daniel/Development/JavaProjects/xray-server
    environment:
      # Available Spring profiles: local, dev, prod
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL: $ICARROS_POSTGRES_URL_DEV
      SPRING_DATASOURCE_USERNAME: $ICARROS_POSTGRES_USERNAME_DEV
      SPRING_DATASOURCE_PASSWORD: $ICARROS_POSTGRES_PASSWORD_DEV
      CORS_PATH-PATTERN: '/**'
      CORS_ALLOWED-HTTP-METHODS: '*'
      CORS_ALLOWED-ORIGINS: '*'
    ports:
      - 8888:8080
    networks:
      - kong-net
  servicea:
    image: wesleywillians/kong-service:latest
    environment:
      PORT: ":8081"
      CONTENT: "<h1>Service A</h1>"
    networks:
      - kong-net
    ports:
      - 8081:8081
  serviceb:
    image: wesleywillians/kong-service:latest
    environment:
      PORT: ":8082"
      CONTENT: "<h1>Service B</h1>"
    networks:
      - kong-net
    ports:
      - 8082:8082
  kong-migrations:
    image: kong:latest
    command: kong migrations bootstrap
    depends_on:
      - db
    environment:
      KONG_DATABASE: postgres
      KONG_PG_DATABASE: kong
      KONG_PG_HOST: db
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
    networks:
      - kong-net
    restart: on-failure
    deploy:
      restart_policy:
        condition: on-failure
  kong-migrations-up:
    image: kong:latest
    command: kong migrations up && kong migrations finish
    depends_on:
      - db
    environment:
      KONG_DATABASE: postgres
      KONG_PG_DATABASE: kong
      KONG_PG_HOST: db
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
    networks:
      - kong-net
    restart: on-failure
    deploy:
      restart_policy:
        condition: on-failure
  kong:
    image: kong:latest
    user: kong
    depends_on:
      - db
    environment:
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_PROXY_LISTEN: 0.0.0.0:8000
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_CASSANDRA_CONTACT_POINTS: db
      KONG_DATABASE: postgres
      KONG_PG_DATABASE: kong
      KONG_PG_HOST: db
      KONG_PG_USER: kong
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_PG_PASSWORD: kong
      KONG_PREFIX: /var/run/kong
    networks:
      - kong-net
    ports:
      - "0.0.0.0:8000:8000/tcp"
      - "0.0.0.0:8443:8443/tcp"
      - "127.0.0.1:8001:8001/tcp"
      - "127.0.0.1:8444:8444/tcp"
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: on-failure:5
    read_only: true
    volumes:
      - kong_prefix_vol:/var/run/kong
      - kong_tmp_vol:/tmp
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 5
      resources:
        limits:
          cpus: "2"
          memory: 2g
    security_opt:
      - no-new-privileges
  db:
    image: postgres:9.6
    environment:
      POSTGRES_DB: kong
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: kong
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: on-failure
    deploy:
      restart_policy:
        condition: on-failure
    stdin_open: true
    tty: true
    networks:
      - kong-net
#    volumes:
#      - kong_data:/var/lib/postgresql/data
  konga-prepare:
    container_name: konga-prepare
    image: pantsel/konga:latest
    command: "-c prepare -a postgres -u postgresql://kong:kong@db:5432/konga_db"
    networks:
      - kong-net
    restart: on-failure
    depends_on:
      - db
  konga:
    container_name: konga
    image: pantsel/konga:latest
    restart: always
    networks:
      - kong-net
    environment:
      DB_ADAPTER: postgres
      DB_HOST: db
      DB_USER: kong
      DB_PASSWORD: kong
      TOKEN_SECRET: ahfdjgjgf79JKLFHJKh978953kgdfjkl
      DB_DATABASE: konga_db
      NODE_ENV: production
    depends_on:
      - db
    ports:
      - "1337:1337"
